
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  firstname: 'firstname',
  lastname: 'lastname',
  email: 'email',
  username: 'username',
  role: 'role',
  profile_image: 'profile_image',
  password: 'password',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  slug: 'slug',
  brand: 'brand',
  product_image: 'product_image',
  image: 'image',
  basePrice: 'basePrice',
  currency: 'currency',
  isPerishable: 'isPerishable',
  shelfLifeDays: 'shelfLifeDays',
  unit: 'unit',
  packageType: 'packageType',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  categoryId: 'categoryId'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  name: 'name',
  netWeight: 'netWeight',
  price: 'price',
  currency: 'currency',
  image: 'image',
  attribute: 'attribute',
  expiryDate: 'expiryDate',
  productId: 'productId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  quantity: 'quantity',
  lowStockLevel: 'lowStockLevel',
  batchNumber: 'batchNumber',
  warehouseId: 'warehouseId',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  parentId: 'parentId'
};

exports.Prisma.WarehouseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  country: 'country',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstname: 'firstname',
  lastname: 'lastname',
  email: 'email',
  phone: 'phone',
  level: 'level',
  employee_id: 'employee_id',
  government_entity: 'government_entity',
  salary_per_month: 'salary_per_month',
  loan_unit: 'loan_unit',
  loan_amount_collected: 'loan_amount_collected',
  is_address_set: 'is_address_set',
  password: 'password',
  otp: 'otp',
  role: 'role',
  profile_image: 'profile_image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  label: 'label',
  street: 'street',
  city: 'city',
  state: 'state',
  country: 'country',
  zipCode: 'zipCode',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  addressId: 'addressId',
  totalAmount: 'totalAmount',
  currency: 'currency',
  paymentStatus: 'paymentStatus',
  orderStatus: 'orderStatus',
  trackingCode: 'trackingCode',
  placedAt: 'placedAt',
  deliveredAt: 'deliveredAt',
  cancelledAt: 'cancelledAt',
  updatedAt: 'updatedAt',
  couponId: 'couponId',
  discount: 'discount'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  variantId: 'variantId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  currency: 'currency',
  total: 'total',
  productId: 'productId'
};

exports.Prisma.OrderTrackingScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  status: 'status',
  message: 'message',
  location: 'location',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderNoteScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  adminId: 'adminId',
  note: 'note',
  createdAt: 'createdAt'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  discountType: 'discountType',
  discountValue: 'discountValue',
  minOrderAmount: 'minOrderAmount',
  maxDiscount: 'maxDiscount',
  isActive: 'isActive',
  startsAt: 'startsAt',
  expiresAt: 'expiresAt',
  usageLimit: 'usageLimit',
  usedCount: 'usedCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  amount: 'amount',
  currency: 'currency',
  provider: 'provider',
  reference: 'reference',
  status: 'status',
  paidAt: 'paidAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  variantId: 'variantId',
  quantity: 'quantity',
  addedAt: 'addedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WishlistItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  variantId: 'variantId',
  addedAt: 'addedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.adminOrderByRelevanceFieldEnum = {
  firstname: 'firstname',
  lastname: 'lastname',
  email: 'email',
  username: 'username',
  profile_image: 'profile_image',
  password: 'password'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  slug: 'slug',
  brand: 'brand',
  product_image: 'product_image',
  currency: 'currency',
  packageType: 'packageType',
  categoryId: 'categoryId'
};

exports.Prisma.ProductVariantOrderByRelevanceFieldEnum = {
  id: 'id',
  sku: 'sku',
  name: 'name',
  currency: 'currency',
  image: 'image',
  productId: 'productId'
};

exports.Prisma.InventoryOrderByRelevanceFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  batchNumber: 'batchNumber',
  warehouseId: 'warehouseId'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  parentId: 'parentId'
};

exports.Prisma.WarehouseOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  country: 'country'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  firstname: 'firstname',
  lastname: 'lastname',
  email: 'email',
  phone: 'phone',
  level: 'level',
  employee_id: 'employee_id',
  government_entity: 'government_entity',
  password: 'password',
  profile_image: 'profile_image'
};

exports.Prisma.AddressOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  label: 'label',
  street: 'street',
  city: 'city',
  state: 'state',
  country: 'country',
  zipCode: 'zipCode'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  addressId: 'addressId',
  currency: 'currency',
  trackingCode: 'trackingCode',
  couponId: 'couponId'
};

exports.Prisma.OrderItemOrderByRelevanceFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  variantId: 'variantId',
  currency: 'currency',
  productId: 'productId'
};

exports.Prisma.OrderTrackingOrderByRelevanceFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  message: 'message',
  location: 'location'
};

exports.Prisma.OrderNoteOrderByRelevanceFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  note: 'note'
};

exports.Prisma.CouponOrderByRelevanceFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  currency: 'currency',
  provider: 'provider',
  reference: 'reference'
};

exports.Prisma.CartItemOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  variantId: 'variantId'
};

exports.Prisma.WishlistItemOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  variantId: 'variantId'
};
exports.Role = exports.$Enums.Role = {
  super_admin: 'super_admin',
  user: 'user'
};

exports.Unit = exports.$Enums.Unit = {
  KG: 'KG',
  GRAM: 'GRAM',
  LITER: 'LITER',
  ML: 'ML',
  PIECE: 'PIECE',
  PACK: 'PACK',
  BOTTLE: 'BOTTLE',
  CAN: 'CAN'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  RETURNED: 'RETURNED'
};

exports.DiscountType = exports.$Enums.DiscountType = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED: 'FIXED'
};

exports.Prisma.ModelName = {
  admin: 'admin',
  Product: 'Product',
  ProductVariant: 'ProductVariant',
  Inventory: 'Inventory',
  Category: 'Category',
  Warehouse: 'Warehouse',
  User: 'User',
  Address: 'Address',
  Order: 'Order',
  OrderItem: 'OrderItem',
  OrderTracking: 'OrderTracking',
  OrderNote: 'OrderNote',
  Coupon: 'Coupon',
  Payment: 'Payment',
  CartItem: 'CartItem',
  WishlistItem: 'WishlistItem'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
